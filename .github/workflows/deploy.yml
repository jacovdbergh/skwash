name: Deploy

# Deploy master on push
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.todo'

jobs:
  build-project-code:
    name: Build project code
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: curl, dom, bcmath, mbstring, zip

      - uses: ramsey/composer-install@v1
        with:
          composer-options: "--prefer-dist --optimize-autoloader --ignore-platform-reqs"

      - name: Prep for upload
        run: |
          touch project-code.tar
          tar cf project-code.tar --exclude=project-code.tar --exclude=.git/ .

      - name: Upload project code
        uses: actions/upload-artifact@v2
        with:
          name: project-code
          path: project-code.tar
          retention-days: 1

  build-assets:
    name: Build assets
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      
      - uses: bahmutov/npm-install@v1

      - name: Laravel Mix
        run: npm run prod

      - name: Upload assets
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: |
            public
            !public/index.php
            !public/.htaccess
            !public/robots.txt
            !public/web.config
            !public/mix-manifest.json
          retention-days: 1

      - name: Upload mix-manifest.json
        uses: actions/upload-artifact@v2
        with:
          name: mix-manifest
          path: public/mix-manifest.json
          retention-days: 1

  deploy-serverless:
    name: Deploy Serverless stack
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ build-project-code, build-assets ]
    steps:
      - name: Download project code
        uses: actions/download-artifact@v2
        with:
          name: project-code

      - name: Prep for use
        run: |
          tar xf project-code.tar
          rm -f project-code.tar

      - run: ls -alh

      - name: Download mix-manifest.json
        uses: actions/download-artifact@v2
        with:
          name: mix-manifest
          path: public

      - name: Serverless Deploy
        uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          RELEASE_HASH: ${{ github.sha }}

  deploy-assets:
    name: Deploy assets
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ deploy-serverless ]
    steps:
      - name: Download assets
        uses: actions/download-artifact@v2
        with:
          name: assets

      - uses: docker://schoenwaldnils/s3-sync-action:0.5.1
        with:
          args: --delete
        env:
          AWS_REGION: af-south-1
          AWS_S3_BUCKET: skwash-prod-assets
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  migrate-db:
    name: Run database migrations
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ deploy-serverless ]
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: curl, dom, bcmath, mbstring, zip

      - name: Download project code
        uses: actions/download-artifact@v2
        with:
          name: project-code

      - name: Prep for use
        run: |
          tar xf project-code.tar
          rm -f project-code.tar

      - name: Run database migration
      # function name is {service}-{stage}-artisan
        run: vendor/bin/bref cli skwash-production-artisan -- migrate --force --ansi --no-interaction
        env:
          AWS_DEFAULT_REGION: af-south-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
